networks:
  default:
    name: tools-net
  proxy-net:
    external: true

volumes:
  vaultwarden-data:
  changedetection-data:
  invidious-data:

services:
  vaultwarden:
    image: vaultwarden/server:1.32.0
    container_name: vaultwarden
    restart: unless-stopped
    environment:
      - DOMAIN=https://${DNS_CNAME_VAULTWARDEN}
      - SIGNUPS_ALLOWED=false
    networks:
      - default
      - proxy-net
    volumes:
      - vaultwarden-data:/data/
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vaultwarden.entrypoints=websecure"
      - "traefik.http.routers.vaultwarden.rule=Host(`${DNS_CNAME_VAULTWARDEN}`)"
      - "traefik.http.services.vaultwarden-tools.loadbalancer.server.port=80"

  changedetection:
    image: linuxserver/changedetection.io:0.46.04
    container_name: changedetection
    restart: unless-stopped
    hostname: changedetection
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Zurich
      - BASE_URL=https://changedetection.home.hpfr.ch
      - PLAYWRIGHT_DRIVER_URL=ws://playwright-chrome:3000
    volumes:
      - changedetection-data:/datastore
    networks:
      - default
      - proxy-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.changedetection.entrypoints=websecure"
      - "traefik.http.services.changedetection-tools.loadbalancer.server.port=5000"
    depends_on:
      playwright-chrome:
        condition: service_started

  playwright-chrome:
    image: dgtlmoon/sockpuppetbrowser:latest
    container_name: changedetection-playwright
    restart: unless-stopped
    hostname: playwright-chrome
    cap_add:
      - SYS_ADMIN
    environment:
      - SCREEN_WIDTH=1920
      - SCREEN_HEIGHT=1024
      - SCREEN_DEPTH=16
      - MAX_CONCURRENT_CHROME_PROCESSES=10
      - ENABLE_DEBUGGER=false
      - PREBOOT_CHROME=true
      - MAX_CONCURRENT_SESSIONS=10
      - CONNECTION_TIMEOUT=300000
      - CHROME_REFRESH_TIME=600000
      - DEFAULT_BLOCK_ADS=true
      - DEFAULT_STEALTH=true
      - DEFAULT_IGNORE_HTTPS_ERRORS=true

  changedetection-exporter:
    image: ghcr.io/schaermu/changedetection.io-exporter:0.1.2
    container_name: changedetection-exporter
    restart: unless-stopped
    networks:
      - default
    environment:
      - CDIO_API_BASE_URL=http://changedetection:5000
      - CDIO_API_KEY=${CDIO_API_KEY}
    depends_on:
      changedetection:
        condition: service_started

  invidious:
    image: quay.io/invidious/invidious:latest
    container_name: invidious
    restart: unless-stopped
    networks:
      - default
      - proxy-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.invidious.entrypoints=websecure"
      - "traefik.http.routers.invidious.rule=Host(`${DNS_CNAME_INVIDIOUS}`)"
      - "traefik.http.services.invidious-tools.loadbalancer.server.port=3000"
    environment:
      INVIDIOUS_CONFIG: |
        db:
          user: ${POSTGRES_USER}
          password: ${POSTGRES_PASSWORD}
          host: invidious-db
          port: 5432
          dbname: invidious
        check_tables: true
        hmac_key: "${INVIDIOUS_HMAC_KEY}"
        domain: ${DNS_CNAME_INVIDIOUS}
        https_only: true
    healthcheck:
      test: wget -nv --tries=1 --spider http://invidious:3000/api/v1/trending || exit 1
      interval: 30s
      timeout: 5s
      retries: 2
    logging:
      options:
        max-size: "1G"
        max-file: "4"
    depends_on:
      - invidious-db

  invidious-db:
    image: docker.io/library/postgres:14
    container_name: invidious-db
    restart: unless-stopped
    volumes:
      - invidious-data:/var/lib/postgresql/data
      - ./config/invidious/sql:/config/sql
      - ./config/invidious/docker/init-invidious-db.sh:/docker-entrypoint-initdb.d/init-invidious-db.sh
    environment:
      POSTGRES_DB: invidious
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]