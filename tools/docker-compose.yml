networks:
  default:
    name: tools-net
  proxy-net:
    external: true

volumes:
  vaultwarden-data:
  invidious-data:
  vikunja-data:
  vikunja-files:

services:
  vaultwarden:
    image: vaultwarden/server:1.34.3
    container_name: vaultwarden
    restart: unless-stopped
    environment:
      - DOMAIN=https://${DNS_CNAME_VAULTWARDEN}
      - SIGNUPS_ALLOWED=
      - ADMIN_TOKEN=${VAULTWARDEN_ADMIN_TOKEN}
      - SIGNUPS_ALLOWED=false
      - INVITATIONS_ALLOWED=false
    networks:
      - default
      - proxy-net
    volumes:
      - vaultwarden-data:/data/
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vaultwarden.entrypoints=websecure"
      - "traefik.http.routers.vaultwarden.rule=Host(`${DNS_CNAME_VAULTWARDEN}`)"
      - "traefik.http.services.vaultwarden-tools.loadbalancer.server.port=80"

  invidious:
    image: quay.io/invidious/invidious:latest
    container_name: invidious
    restart: unless-stopped
    networks:
      - default
      - proxy-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.invidious.entrypoints=websecure"
      - "traefik.http.services.invidious-tools.loadbalancer.server.port=3000"
    environment:
      INVIDIOUS_CONFIG: |
        db:
          user: ${INVIDIOUS_POSTGRES_USER}
          password: ${INVIDIOUS_POSTGRES_PASSWORD}
          host: invidious-db
          port: 5432
          dbname: invidious
        check_tables: true
        hmac_key: "${INVIDIOUS_HMAC_KEY}"
        domain: ${DNS_CNAME_INVIDIOUS}
        https_only: true
    healthcheck:
      test: wget -nv --tries=1 --spider http://invidious:3000/api/v1/trending || exit 1
      interval: 30s
      timeout: 5s
      retries: 2
    logging:
      options:
        max-size: "1G"
        max-file: "4"
    depends_on:
      - invidious-db

  invidious-db:
    image: docker.io/library/postgres:14
    container_name: invidious-db
    restart: unless-stopped
    volumes:
      - invidious-data:/var/lib/postgresql/data
      - ./config/invidious/sql:/config/sql
      - ./config/invidious/docker/init-invidious-db.sh:/docker-entrypoint-initdb.d/init-invidious-db.sh
    environment:
      POSTGRES_DB: invidious
      POSTGRES_USER: ${INVIDIOUS_POSTGRES_USER}
      POSTGRES_PASSWORD: ${INVIDIOUS_POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]

  vikunja:
    image: vikunja/vikunja:0.24.6
    container_name: vikunja
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vikunja.entryPoints=websecure"
      - "traefik.http.services.vikunja.loadbalancer.server.port=3456"
    environment:
      VIKUNJA_SERVICE_PUBLICURL: https://vikunja.home.hpfr.ch
      VIKUNJA_DATABASE_HOST: vikunja-db
      VIKUNJA_DATABASE_PASSWORD: ${VIKUNJA_POSTGRES_PASSWORD}
      VIKUNJA_DATABASE_TYPE: postgres
      VIKUNJA_DATABASE_USER: vikunja
      VIKUNJA_DATABASE_DATABASE: vikunja
      VIKUNJA_SERVICE_JWTSECRET: ${VIKUNJA_JWT_SECRET}
    volumes:
      - vikunja-files:/app/vikunja/files
    networks:
      - default
      - proxy-net
    depends_on:
      vikunja-db:
        condition: service_healthy
    restart: unless-stopped

  vikunja-db:
    image: postgres:16
    container_name: vikunja-db
    environment:
      POSTGRES_PASSWORD: ${VIKUNJA_POSTGRES_PASSWORD}
      POSTGRES_USER: vikunja
    volumes:
      - vikunja-data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h localhost -U $$POSTGRES_USER"]
      interval: 2s
