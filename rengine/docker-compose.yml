version: '3.8'

networks:
  default:
    name: rengine-net
  proxy-net:
    external: true

volumes:
  postgres-db:
  gf-patterns:
  nuclei-templates:
  github-repos:
  wordlist:
  scan-results:
  static-volume:

services:
  db:
    restart: always
    image: postgres:15.1-alpine
    container_name: rengine-db
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
    ports:
      - "5432:5432"
    volumes:
      - postgres-db:/var/lib/postgresql/data/
    networks:
      - default

  redis:
    image: redis:alpine
    container_name: rengine-redis
    hostname: redis
    networks:
      - default

  celery:
    image: ghcr.io/schaermu/rengine:1.3.5
    container_name: rengine-celery
    restart: always
    entrypoint: /usr/src/app/celery-entrypoint.sh
    command: watchmedo auto-restart --recursive --pattern="*.py" --directory="/usr/src/app/reNgine/" -- celery -A reNgine worker --autoscale=${MAX_CONCURRENCY},${MIN_CONCURRENCY} -l INFO
    volumes:
      - ./config:/root/.config
      - github-repos:/usr/src/github
      - wordlist:/usr/src/wordlist
      - scan-results:/usr/src/scan_results
      - gf-patterns:/root/.gf
      - nuclei-templates:/root/nuclei-templates
      - static-volume:/usr/src/app/staticfiles/
    environment:
      - DEBUG=0
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_HOST=${POSTGRES_HOST}
    depends_on:
      - db
      - redis
    networks:
      - default

  celery-beat:
    image: ghcr.io/schaermu/rengine:1.3.5
    container_name: rengine-celery-beat
    entrypoint: /usr/src/app/beat-entrypoint.sh
    command: celery -A reNgine beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    environment:
      - DEBUG=0
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_HOST=${POSTGRES_HOST}
    depends_on:
      - celery
    volumes:
      - ./config:/root/.config
      - github-repos:/usr/src/github
      - wordlist:/usr/src/wordlist
      - scan-results:/usr/src/scan_results
      - gf-patterns:/root/.gf
      - nuclei-templates:/root/nuclei-templates
    networks:
      - default

  web:
    image: ghcr.io/schaermu/rengine:1.3.5
    container_name: rengine-web
    entrypoint: /usr/src/app/entrypoint.sh
    restart: unless-stopped
    environment:
      - DEBUG=0
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - RENGINE_CURRENT_VERSION='1.3.5'
    volumes:
      - ./config:/root/.config
      - github-repos:/usr/src/github
      - wordlist:/usr/src/wordlist
      - scan-results:/usr/src/scan_results
      - gf-patterns:/root/.gf
      - nuclei-templates:/root/nuclei-templates
      - static-volume:/usr/src/app/staticfiles/
    ports:
      - "8000:8000"
    depends_on:
      - db
      - celery
      - celery-beat
    networks:
      - default

  proxy:
    image: nginx:alpine
    container_name: rengine-proxy
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rengine.entrypoints=https"
      - "traefik.http.routers.rengine.rule=Host(`${DNS_CNAME}`)"
    ports:
      - 80:80/tcp
    depends_on:
      - web
      - db
      - redis
    volumes:
      - ./config/nginx/rengine.conf:/etc/nginx/conf.d/rengine.conf:ro
      - static-volume:/usr/src/app/staticfiles/
      - scan-results:/usr/src/scan_results
    networks:
      - default
      - proxy-net

  tor:
    image: peterdavehello/tor-socks-proxy
    container_name: rengine-tor-proxy
    restart: unless-stopped
    depends_on:
      - web
    networks:
      - default
